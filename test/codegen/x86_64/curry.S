# RUN: %opt - -triple x86_64 -O1

caml_curry2_1:
  .visibility global_default
  .call                caml
  .args                v64, v64
  arg.v64              $10001, 0
  arg.v64              $10009, 1
  mov.v64              $0, $10001
  mov.v64              $1, $10009
  mov.i64              $15000, 24
  add.i64              $15001, $1, $15000
  load.v64               $2, [$15001]
  mov.i64              $15002, 16
  add.i64              $15003, $1, $15002
  load.v64               $1, [$15003]
  mov.i64              $15004, 16
  add.i64              $15005, $2, $15004
  load.v64               $3, [$15005]
  mov.v64              $10000, $1
  mov.v64              $10008, $0
  mov.v64              $10016, $2
  tcall.i64.caml       $3, $10000, $10008, $10016 @caml_frame
  .end

caml_curry17_16:
  .visibility global_default
  .call                caml
  .args                v64, v64
  arg.v64              $10001, 0
  arg.v64              $10009, 1
  mov.v64              $0, $10001
  mov.v64              $1, $10009
  mov.i64              $15000, 24
  add.i64              $15001, $1, $15000
  load.v64               $2, [$15001]
  mov.i64              $15002, 24
  add.i64              $15003, $2, $15002
  load.v64               $3, [$15003]
  mov.i64              $15004, 24
  add.i64              $15005, $3, $15004
  load.v64               $4, [$15005]
  mov.i64              $15006, 24
  add.i64              $15007, $4, $15006
  load.v64               $5, [$15007]
  mov.i64              $15008, 24
  add.i64              $15009, $5, $15008
  load.v64               $6, [$15009]
  mov.i64              $15010, 24
  add.i64              $15011, $6, $15010
  load.v64               $7, [$15011]
  mov.i64              $15012, 24
  add.i64              $15013, $7, $15012
  load.v64               $8, [$15013]
  mov.i64              $15014, 24
  add.i64              $15015, $8, $15014
  load.v64               $9, [$15015]
  mov.i64              $15016, 24
  add.i64              $15017, $9, $15016
  load.v64               $10, [$15017]
  mov.i64              $15018, 24
  add.i64              $15019, $10, $15018
  load.v64               $11, [$15019]
  mov.i64              $15020, 24
  add.i64              $15021, $11, $15020
  load.v64               $12, [$15021]
  mov.i64              $15022, 24
  add.i64              $15023, $12, $15022
  load.v64               $13, [$15023]
  mov.i64              $15024, 24
  add.i64              $15025, $13, $15024
  load.v64               $14, [$15025]
  mov.i64              $15026, 24
  add.i64              $15027, $14, $15026
  load.v64               $15, [$15027]
  mov.i64              $15028, 24
  add.i64              $15029, $15, $15028
  load.v64               $16, [$15029]
  mov.i64              $15030, 24
  add.i64              $15031, $16, $15030
  load.v64               $17, [$15031]
  mov.i64              $15032, 16
  add.i64              $15033, $1, $15032
  load.v64               $1, [$15033]
  mov.i64              $15034, 16
  add.i64              $15035, $2, $15034
  load.v64               $2, [$15035]
  mov.i64              $15036, 16
  add.i64              $15037, $3, $15036
  load.v64               $3, [$15037]
  mov.i64              $15038, 16
  add.i64              $15039, $4, $15038
  load.v64               $4, [$15039]
  mov.i64              $15040, 16
  add.i64              $15041, $5, $15040
  load.v64               $5, [$15041]
  mov.i64              $15042, 16
  add.i64              $15043, $6, $15042
  load.v64               $6, [$15043]
  mov.i64              $15044, 16
  add.i64              $15045, $7, $15044
  load.v64               $7, [$15045]
  mov.i64              $15046, 16
  add.i64              $15047, $8, $15046
  load.v64               $8, [$15047]
  mov.i64              $15048, 16
  add.i64              $15049, $9, $15048
  load.v64               $9, [$15049]
  mov.i64              $15050, 16
  add.i64              $15051, $10, $15050
  load.v64               $10, [$15051]
  mov.i64              $15052, 16
  add.i64              $15053, $11, $15052
  load.v64               $11, [$15053]
  mov.i64              $15054, 16
  add.i64              $15055, $12, $15054
  load.v64               $12, [$15055]
  mov.i64              $15056, 16
  add.i64              $15057, $13, $15056
  load.v64               $13, [$15057]
  mov.i64              $15058, 16
  add.i64              $15059, $14, $15058
  load.v64               $14, [$15059]
  mov.i64              $15060, 16
  add.i64              $15061, $15, $15060
  load.v64               $15, [$15061]
  mov.i64              $15062, 16
  add.i64              $15063, $16, $15062
  load.v64               $16, [$15063]
  mov.i64              $15064, 16
  add.i64              $15065, $17, $15064
  load.v64               $18, [$15065]
  mov.v64              $10000, $16
  mov.v64              $10008, $15
  mov.v64              $10016, $14
  mov.v64              $10024, $13
  mov.v64              $10032, $12
  mov.v64              $10040, $11
  mov.v64              $10048, $10
  mov.v64              $10056, $9
  mov.v64              $10064, $8
  mov.v64              $10072, $7
  mov.v64              $10080, $6
  mov.v64              $10088, $5
  mov.v64              $10096, $4
  mov.v64              $10104, $3
  mov.v64              $10112, $2
  mov.v64              $10120, $1
  mov.v64              $10128, $0
  mov.v64              $10136, $17
  tcall.i64.caml       $18, $10000, $10008, $10016, $10024, $10032, $10040, $10048, $10056, $10064, $10072, $10080, $10088, $10096, $10104, $10112, $10120, $10128, $10136 @caml_frame
  .end

caml_curry11_1_app:
  .visibility          global_default
  .call                caml
  .args                v64, v64, v64, v64, v64, v64, v64, v64, v64, v64, v64
  arg.v64              $1, 0
  arg.v64              $9, 1
  arg.v64              $17, 2
  arg.v64              $25, 3
  arg.v64              $33, 4
  arg.v64              $41, 5
  arg.v64              $49, 6
  arg.v64              $57, 7
  arg.v64              $65, 8
  arg.v64              $73, 9
  arg.v64              $81, 10
  mov.v64              $12, $1
  mov.v64              $20, $9
  mov.v64              $28, $17
  mov.v64              $36, $25
  mov.v64              $44, $33
  mov.v64              $52, $41
  mov.v64              $60, $49
  mov.v64              $68, $57
  mov.v64              $76, $65
  mov.v64              $84, $73
  mov.v64              $92, $81
  mov.i64              $5, 32
  add.i64              $13, $92, $5
  load.v64               $188, [$13]
  mov.i64              $21, 24
  add.i64              $29, $92, $21
  load.v64               $196, [$29]
  mov.i64              $37, 16
  add.i64              $45, $188, $37
  load.v64               $204, [$45]
  mov.v64              $0, $196
  mov.v64              $8, $12
  mov.v64              $16, $20
  mov.v64              $24, $28
  mov.v64              $32, $36
  mov.v64              $40, $44
  mov.v64              $48, $52
  mov.v64              $56, $60
  mov.v64              $64, $68
  mov.v64              $72, $76
  mov.v64              $80, $84
  mov.v64              $88, $188
  tcall.i64.caml       $204, $0, $8, $16, $24, $32, $40, $48, $56, $64, $72, $80, $88 @caml_frame
  .end
